#-------------------------------------------------------------------------------
# Name:        provisioning_utils
# Purpose:
#
# Author:      Laurent
#
# Created:     27/11/2019
# Copyright:   (c) Laurent Carr√© Sterwen Technologies 2019
# Licence:     Eclipse Public License 1.0
#-------------------------------------------------------------------------------

import platform
import os
import subprocess
import sys
import datetime
import logging

servlog=logging.getLogger('SolidSense-provisioning')

def isWindows():
    pl_str=platform.platform()
    # print("System platform:",pl_str)
    return pl_str.startswith('Windows')

def systemCtl(action, service):
    args=['systemctl']
    args.append(action)
    args.append(service)
    servlog.info('Executing:'+str(args))
    try:
        c=subprocess.run(args,stderr=sys.stderr)
    except Exception as e:
        servlog.error("Systemctl error:"+str(e))
        return -1
    servlog.info('result:'+str(c))
    return c.returncode



def checkCreateDir(dir) :
    if isWindows() :
        return
    if os.path.lexists(dir):
        # ok the file exist
        if not os.path.isdir(dir) :
            # normal file need to remove it
            os.remove(dir)
            os.mkdir(dir)
    else:
        os.mkdir(dir)
    # adjust mode in all cases
    os.chmod(dir,0o777)

def checkAndRemoveFile(dir,file):
    if os.path.lexists(dir):
        path=os.path.join(dir,file)
        if os.path.lexists(path):
            os.remove(path)


def write_header(fd):
    t=datetime.datetime.now()
    header=t.strftime("# Generated by SolidSense provisioning system on %d-%b-%Y %H:%M:%S\n")
    fd.write(header)

def str2bool(s):
    if s == 'true':
        return True
    elif s == 'false' :
        return False
    else:
        raise(ValueError)

def bool2str(b):
    if b :
        return 'true'
    else :
        return 'false'


def main():
    pass

if __name__ == '__main__':
    main()
